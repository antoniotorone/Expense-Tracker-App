{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","eneteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeYear","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","SetExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wbAkFeA,MA7Ef,SAAqBC,GAEjB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAuCJ,mBAAS,IAAhD,mBAAOK,EAAP,KAAqBC,EAArB,KA6CA,OACA,uBAAMC,SAlBN,SAAuBC,GACnBA,EAAMC,iBAEN,IAAMC,EAAc,CACpBC,MAAOV,EACPW,QAAST,EACTU,KAAM,IAAIC,KAAKT,IAGfN,EAAMgB,kBAAkBL,GAGxBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAInB,UACI,sBAAKU,UAAU,wBAAf,UAEI,sBAAKA,UAAU,uBAAf,UACI,0CACA,uBAAOC,KAAK,OAAOC,MAAOjB,EAAckB,SAhDpD,SAA4BX,GACxBN,EAAgBM,EAAMY,OAAOF,aAkDzB,sBAAKF,UAAU,uBAAf,UACI,2CACA,uBAAOC,KAAK,SAASC,MAAOf,EAAekB,IAAI,OAAOC,KAAK,OAAOH,SA/C9E,SAA6BX,GAC5BJ,EAAiBI,EAAMY,OAAOF,aAiDvB,sBAAKF,UAAU,uBAAf,UACI,yCACA,uBAAOC,KAAK,OAAOC,MAAOb,EAAcgB,IAAI,aAAaE,IAAI,aAAaJ,SA9CtF,SAA2BX,GACvBF,EAAeE,EAAMY,OAAOF,gBAiD5B,sBAAKF,UAAU,uBAAf,UACI,wBAAQC,KAAK,SAASO,QAASzB,EAAM0B,SAArC,oBACA,wBAAQR,KAAK,SAAb,gC,MCpCGS,MAnCf,SAAoB3B,GAChB,MAAkCC,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAmBA,OACE,sBAAKZ,UAAU,cAAf,WACIW,GACA,wBAAQH,QAVd,WACII,GAAa,IASX,8BAEDD,GACC,cAAC,EAAD,CACEZ,kBAxBR,SAAgCc,GAE5B,IAAMnB,EAAW,2BACVmB,GADU,IAEbC,GAAIC,KAAKC,SAASC,aAEtBlC,EAAMmC,aAAaxB,GACnBkB,GAAa,IAkBTH,SAXR,WACIG,GAAa,U,MCZNO,MAPf,SAAcpC,GACV,IAAMqC,EAAU,QAAUrC,EAAMiB,UAChC,OACI,qBAAKA,UAAWoB,EAAhB,SAA0BrC,EAAMsC,Y,MCoBzBC,MAvBf,SAAwBvC,GAQpB,OACA,qBAAKiB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQE,MAAOnB,EAAMwC,SAAUpB,SAVnC,SAA2BX,GACvBT,EAAMyC,aAAahC,EAAMY,OAAOF,QAShC,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,2B,YCDKuB,MAff,SAAqB1C,GACjB,IAAM2C,EAAQ3C,EAAMc,KAAK8B,eAAe,QAAS,CAACD,MAAO,SACnDE,EAAM7C,EAAMc,KAAK8B,eAAe,QAAS,CAACC,IAAK,YAC/CC,EAAO9C,EAAMc,KAAKiC,cAExB,OACI,sBAAK9B,UAAU,eAAf,UACA,qBAAKA,UAAU,sBAAf,SAAsC0B,IACtC,qBAAK1B,UAAU,qBAAf,SAAqC6B,IACrC,qBAAK7B,UAAU,oBAAf,SAAoC4B,Q,MCU7BG,MAff,SAAqBhD,GAEnB,OACE,6BACA,eAAC,EAAD,CAAMiB,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaH,KAAOd,EAAMc,OAC1B,sBAAKG,UAAU,4BAAf,UACE,6BAAKjB,EAAMY,QACX,sBAAKK,UAAU,sBAAf,cAAuCjB,EAAMa,mBCQtCoC,MAnBf,SAAsBjD,GAEpB,OAA2B,IAAvBA,EAAMkD,MAAMC,OACP,oBAAIlC,UAAU,0BAAd,gCAIF,oBAAIA,UAAU,gBAAd,SACJjB,EAAMkD,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEAzC,MAAOyC,EAAQzC,MACfC,OAAQwC,EAAQxC,OAChBC,KAAMuC,EAAQvC,MAHTuC,EAAQtB,U,OCSJuB,G,MApBE,SAACtD,GAChB,IAAIuD,EAAgB,KAMpB,OAJIvD,EAAMwD,SAAW,IACnBD,EAAgBvB,KAAKyB,MAAOzD,EAAMmB,MAAQnB,EAAMwD,SAAY,KAAO,KAInE,sBAAKvC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVyC,MAAO,CAAEC,OAAQJ,OAGrB,qBAAKtC,UAAU,mBAAf,SAAmCjB,EAAM4D,aCIhCC,G,MAlBD,SAAC7D,GACb,IAAM8D,EAAkB9D,EAAM+D,WAAWX,KAAI,SAAAY,GAAS,OAAIA,EAAU7C,SAC9D8C,EAAejC,KAAKR,IAAL,MAAAQ,KAAI,YAAQ8B,IAEjC,OACE,qBAAK7C,UAAU,QAAf,SACGjB,EAAM+D,WAAWX,KAAI,SAACY,GAAD,OACpB,cAAC,EAAD,CAEE7C,MAAO6C,EAAU7C,MACjBqC,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCiBVM,MA1Bf,SAAwBlE,GAEpB,IAF2B,EAErBmE,EAAkB,CACpB,CAAEP,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,GACxB,CAAEyC,MAAO,MAAQzC,MAAO,IAdD,cAiBLnB,EAAMoE,UAjBD,IAiB3B,2BAAsC,CAAC,IAA5Bf,EAA2B,QAElCc,EADqBd,EAAQvC,KAAKuD,YACJlD,OAASkC,EAAQxC,QAnBxB,8BAsB3B,OAAO,cAAC,EAAD,CAAOkD,WAAYI,K,MCWfG,MA5Bf,SAAmBtE,GACjB,MAAwCC,mBAAS,QAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KAOMC,EAAmBzE,EAAMkD,MAAMwB,QAAO,SAAUrB,GACpD,OAAOA,EAAQvC,KAAKiC,cAAcb,aAAeqC,KAKjD,OACE,8BACE,eAAC,EAAD,CAAMtD,UAAU,WAAhB,UACE,cAAC,EAAD,CACEuB,SAAU+B,EACV9B,aAhBV,SAA2BkC,GACzBH,EAAgBG,MAiBV,cAAC,EAAD,CAAeP,SAAUK,IACzB,cAAC,EAAD,CAAcvB,MAAOuB,UC1BzBG,EAAiB,CAErB,CACE7C,GAAI,KACJnB,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAG1B,CAAEgB,GAAI,KACNnB,MAAO,SACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAGxB,CACEgB,GAAI,KACJnB,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAG1B,CACEgB,GAAI,KACJnB,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAuBb8D,MAlBf,WACE,MAAgC5E,mBAAS2E,GAAzC,mBAAOR,EAAP,KAAiBU,EAAjB,KAQA,OACE,gCACE,cAAC,EAAD,CAAY3C,aARhB,SAA4BkB,GAC1ByB,GAAa,SAACC,GACZ,MAAM,CAAE1B,GAAR,mBAAoB0B,UAOpB,cAAC,EAAD,CAAU7B,MAAOkB,QC1CVY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.6138e6b3.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\n\r\nfunction ExpenseForm(props) {\r\n    // using multiple state\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [eneteredDate, setEnteredDate] = useState(\"\");\r\n\r\n    // TITLE\r\n    function titleChangeHandler(event) {\r\n        setEnteredTitle(event.target.value);\r\n\r\n    };\r\n\r\n    //AMOUNT\r\n    function amountChangeHandler(event) {\r\n     setEnteredAmount(event.target.value);\r\n\r\n    };\r\n\r\n    //DATE\r\n    function dateChangeHandler(event) {\r\n        setEnteredDate(event.target.value);\r\n\r\n    };\r\n\r\n    // \"choise this approach if your state depends from the previous state SECTION 4 VIDEO 56\"\r\n                                // ARROW FUNCTION    \r\n    // setUserInput((prevState,) => {\r\n    // return { ... prevState, enteredTitle: event.target.value};\r\n    // })\r\n\r\n\r\n    // preventDefault is a javascript method\r\n    function submitHandler(event){\r\n        event.preventDefault();\r\n\r\n        const expenseData = { \r\n        title: enteredTitle,\r\n        amount: +enteredAmount,\r\n        date: new Date(eneteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData)\r\n        //two way-binding. Set the value to an empty string because after the form is submitted in this way we clean the input,\r\n        // that's why this code piece is after the submit form function\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return (\r\n    <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            \r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n            </div>\r\n            \r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n            </div>\r\n            \r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" value={eneteredDate} min=\"2019-01-01\" max=\"2023-12-31\" onChange={dateChangeHandler} />\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"new-expense__actions\">\r\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n            <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React, {useState}from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport \"./NewExpense.css\";\r\n\r\nfunction NewExpense(props) {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    function saveExpenseDataHandler(enteredExpenseData) {\r\n      \r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData)\r\n        setIsEditing(false)\r\n    };\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    function startEditingHandler() {\r\n        setIsEditing(true)\r\n    }\r\n\r\n    function stopEditingHandler() {\r\n        setIsEditing(false);\r\n    }\r\n    return (\r\n      <div className=\"new-expense\">\r\n        {!isEditing && (\r\n          <button onClick={startEditingHandler}> Add new Expense</button>\r\n        )}\r\n        {isEditing && ( \r\n          <ExpenseForm\r\n            onSaveExpenseData={saveExpenseDataHandler}\r\n            onCancel={stopEditingHandler}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nfunction ExpensesFilter(props) {\r\n    \r\n    function yearChangeHandler(event) {\r\n        props.onChangeYear(event.target.value)\r\n\r\n    };\r\n    \r\n  \r\n    return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n\r\n// ONCHANGE IS A PROP","import React from 'react';\r\n\r\nimport \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"../Expenses/ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\n\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  return (\r\n    <li>\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date= {props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\n\r\nfunction ExpensesList(props) {\r\n    // conditional statement logic with message if aren't no expenses related to the proper year \r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\"> Found no expenses</h2>\r\n  }\r\n    \r\n// second condition \r\n  return <ul className=\"expenses-list\">\r\n    {props.items.map((expense) => (\r\n      <ExpenseItem \r\n      key={expense.id}\r\n      title={expense.title}\r\n      amount={expense.amount}\r\n      date={expense.date}/>\r\n    ))}\r\n  </ul>\r\n\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nfunction ExpensesChart (props) {\r\n\r\n    const chartDataPoints = [\r\n        { label: 'Jan' , value: 0 },\r\n        { label: 'Feb' , value: 0 },\r\n        { label: 'Mar' , value: 0 },\r\n        { label: 'Apr' , value: 0 },\r\n        { label: 'May' , value: 0 },\r\n        { label: 'Jun' , value: 0 },\r\n        { label: 'Jul' , value: 0 },\r\n        { label: 'Aug' , value: 0 },\r\n        { label: 'Sep' , value: 0 },\r\n        { label: 'Oct' , value: 0 },\r\n        { label: 'Nov' , value: 0 },\r\n        { label: 'Dec' , value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // the months are 11 because january is 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n\r\n\r\nexport default ExpensesChart","import React, {useState} from 'react';\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport \"./Expenses.css\";\r\n\r\n\r\nfunction Expenses (props) {\r\n  const [filteredYear, setFilteredYear] = useState('2020')\r\n\r\n  function yearChangeHandler(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  \r\n  // logic to filter items by year \r\n  const filteredExpenses = props.items.filter(function (expense) {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  \r\n\r\n    return (\r\n      <div>\r\n        <Card className=\"expenses\">\r\n          <ExpensesFilter\r\n            selected={filteredYear}\r\n            onChangeYear={yearChangeHandler}\r\n          />\r\n          <ExpensesChart expenses={filteredExpenses}/>\r\n          <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from \"react\";\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n    \n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n\n  { id: \"e2\", \n  title: \"New TV\", \n  amount: 799.49, \n  date: new Date(2021, 2, 12) \n  },\n\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  \n];\n\nfunction App () {\n  const [expenses, SetExpenses] = useState(DUMMY_EXPENSES);\n \n  function addExpenseHandler (expense) {\n    SetExpenses ((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}/>\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}